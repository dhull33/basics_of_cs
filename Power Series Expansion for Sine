The power series expansion for sine is:
sin(x)=∑n=0∞(−1)nx2n+1(2n+1)!
 
(See mathematics data book for a less compact version; the compact version is preferred here as it is simpler to program.)
Using a for statement, approximate  sin(3π/2)
  using 15 terms in the series exansion and report the absolute error.
Using a while statement, compute how many terms in the series are required to approximate  sin(3π/2)
  to within  1×10−8
 .
Note: Calculators and computers use iterative or series expansions to compute trigonometric functions, similar to the one above (although they use more efficient formulations than the above series).
Hints
To compute the factorial and to get a good approximation of  π
 , use the Python math module:
import math
nfact = math.factorial(10)
pi = math.pi
You only need 'import math' once at the top of your program. Standard modules, like math will be explained in a later exercise. If you want to test for angles for which sine is not simple, you can use
a = 1.3
s = math.sin(a)
to get an accurate computation of sine to check the error.


###using a "for" loop###


import math
nfact = math.factorial(10)
pi = math.pi 

x = (3*pi)/2
approx_sin = 0.0

for i in range(15):
    approx_sin += ((-1)**i) * ((x**(2*i + 1))/math.factorial(2*i + 1))
    error = abs(approx_sin - math.sin(x))
                
                
print("The error is:")
print(error)


##using a while loop##

import math
nfact = math.factorial(10)
pi = math.pi 

x = (3*pi)/2
approx_sin = 0.0

tol = 1.0e-8
error = tol + 1.0
i = 0
while error > tol and i < 1000:
    approx_sin += ((-1)**i) * ((x**(2*i + 1))/math.factorial(2*i + 1))
    error = abs(approx_sin - math.sin(x))
    print(error)
    i+=1
                
                
print("The error is:")
print(error)

print("Number of terms in series:")
print(i)
